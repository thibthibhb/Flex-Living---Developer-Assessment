generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  // Use pooled URL at runtime; direct URL for migrations
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Property {
  id            Int       @id @default(autoincrement())
  name          String    @unique
  hostawayName  String?
  googlePlaceId String?
  slug          String    @unique
  reviews       Review[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Review {
  id             String    @id @default(cuid())
  source         String    
  sourceReviewId String
  propertyId     Int
  property       Property  @relation(fields: [propertyId], references: [id])
  reviewType     String
  channel        String?
  ratingOverall  Float?
  text           String
  submittedAt    DateTime
  guestName      String?
  status         String?
  categories     ReviewCategoryRating[]
  selection      Selection?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  @@unique([source, sourceReviewId], name: "uniq_source_review")
  @@index([submittedAt])
  @@index([propertyId, submittedAt])
  @@index([channel])
}

model ReviewCategoryRating {
  id       Int     @id @default(autoincrement())
  reviewId String
  review   Review  @relation(fields: [reviewId], references: [id], onDelete: Cascade)
  category String
  rating   Float

  @@index([reviewId])
}

model Selection {
  reviewId           String  @id
  review             Review  @relation(fields: [reviewId], references: [id], onDelete: Cascade)
  approvedForWebsite Boolean @default(false)
  approvedAt         DateTime?
  approvedBy         String?
}
